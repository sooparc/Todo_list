{"ast":null,"code":"var _jsxFileName = \"/Users/soojinpark/Desktop/todo_list/src/components/TodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport classes from \"../components/TodoForm.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TodoForm(props) {\n  _s();\n  const [showInput, setShowInput] = useState(false);\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\n  const inputRef = useRef(null);\n  const searchIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    size: \"lg\",\n    icon: faMagnifyingGlass\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 22\n  }, this);\n  const handleSearch = e => {\n    props.todos.filter(i => i.text.includes(e.target.value));\n    console.log(props.todos);\n  };\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.inputForm,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.inputIcon,\n        children: searchIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Search\",\n        className: classes.searchInput,\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowInput(!showInput),\n        className: classes.newButton,\n        children: \"New\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), showInput === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: classes.todoForm,\n        children: props.edit ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: input,\n            onChange: handleChange,\n            name: \"text\",\n            ref: inputRef,\n            className: classes.todoInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            className: classes.addButton,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: input,\n            onChange: handleChange,\n            name: \"text\",\n            className: classes.todoInput,\n            ref: inputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            className: classes.addButton,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoForm, \"VvnJs/dxVYof/tY7SM0L3N9qMJQ=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","useRef","classes","FontAwesomeIcon","faMagnifyingGlass","TodoForm","props","showInput","setShowInput","input","setInput","edit","value","inputRef","searchIcon","handleSearch","e","todos","filter","i","text","includes","target","console","log","handleChange","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","container","inputForm","inputIcon","searchInput","newButton","todoForm","todoInput","addButton"],"sources":["/Users/soojinpark/Desktop/todo_list/src/components/TodoForm.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport classes from \"../components/TodoForm.module.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\n\nfunction TodoForm(props) {\n  const [showInput, setShowInput] = useState(false);\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\n\n  const inputRef = useRef(null);\n\n  const searchIcon = <FontAwesomeIcon size=\"lg\" icon={faMagnifyingGlass} />;\n\n  const handleSearch = (e) => {\n    props.todos.filter((i) => i.text.includes(e.target.value));\n    console.log(props.todos);\n  };\n\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input,\n    });\n    setInput(\"\");\n  };\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.inputForm}>\n        <span className={classes.inputIcon}>{searchIcon}</span>\n        <input\n          placeholder=\"Search\"\n          className={classes.searchInput}\n          onChange={handleSearch}\n        />\n        <button\n          onClick={() => setShowInput(!showInput)}\n          className={classes.newButton}\n        >\n          New\n        </button>\n      </div>\n\n      {showInput === true ? (\n        <>\n          <form onSubmit={handleSubmit} className={classes.todoForm}>\n            {props.edit ? (\n              <div>\n                <input\n                  value={input}\n                  onChange={handleChange}\n                  name=\"text\"\n                  ref={inputRef}\n                  className={classes.todoInput}\n                />\n                <button onClick={handleSubmit} className={classes.addButton}>\n                  Update\n                </button>\n              </div>\n            ) : (\n              <div>\n                <input\n                  value={input}\n                  onChange={handleChange}\n                  name=\"text\"\n                  className={classes.todoInput}\n                  ref={inputRef}\n                />\n                <button onClick={handleSubmit} className={classes.addButton}>\n                  Save\n                </button>\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default TodoForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}