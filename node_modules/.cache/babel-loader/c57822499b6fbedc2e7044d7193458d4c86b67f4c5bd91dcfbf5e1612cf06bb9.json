{"ast":null,"code":"var _jsxFileName = \"/Users/soojinpark/Desktop/todo_list/src/components/TodoForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport classes from \"../components/TodoForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TodoForm(props) {\n  _s();\n  const [showInput, setShowInput] = useState(false);\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\n  const inputRef = useRef(null);\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.body,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowInput(!showInput),\n      children: \"New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), showInput === true ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: classes.todoForm,\n        children: props.edit ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: input,\n            onChange: handleChange,\n            name: \"text\",\n            ref: inputRef,\n            className: classes.todoInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            className: classes.addButton,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            value: input,\n            onChange: handleChange,\n            name: \"text\",\n            className: classes.todoInput,\n            ref: inputRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleSubmit,\n            className: classes.addButton,\n            children: \"Add todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoForm, \"VvnJs/dxVYof/tY7SM0L3N9qMJQ=\");\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","useRef","classes","TodoForm","props","showInput","setShowInput","input","setInput","edit","value","inputRef","handleChange","e","target","handleSubmit","preventDefault","onSubmit","id","Math","floor","random","text","body","todoForm","todoInput","addButton"],"sources":["/Users/soojinpark/Desktop/todo_list/src/components/TodoForm.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport classes from \"../components/TodoForm.module.css\";\n\nfunction TodoForm(props) {\n  const [showInput, setShowInput] = useState(false);\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\n\n  const inputRef = useRef(null);\n\n  const handleChange = (e) => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input,\n    });\n    setInput(\"\");\n  };\n\n  return (\n    <div className={classes.body}>\n      <button onClick={() => setShowInput(!showInput)}>New</button>\n      {showInput === true ? (\n        <>\n          <form onSubmit={handleSubmit} className={classes.todoForm}>\n            {props.edit ? (\n              <div>\n                <input\n                  value={input}\n                  onChange={handleChange}\n                  name=\"text\"\n                  ref={inputRef}\n                  className={classes.todoInput}\n                />\n                <button onClick={handleSubmit} className={classes.addButton}>\n                  Update\n                </button>\n              </div>\n            ) : (\n              <div>\n                <input\n                  value={input}\n                  onChange={handleChange}\n                  name=\"text\"\n                  className={classes.todoInput}\n                  ref={inputRef}\n                />\n                <button onClick={handleSubmit} className={classes.addButton}>\n                  Add todo\n                </button>\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n}\n\nexport default TodoForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,OAAO,MAAM,mCAAmC;AAAC;AAAA;AAExD,SAASC,QAAQ,CAACC,KAAK,EAAE;EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAACI,KAAK,CAACK,IAAI,GAAGL,KAAK,CAACK,IAAI,CAACC,KAAK,GAAG,EAAE,CAAC;EAEtE,MAAMC,QAAQ,GAAGV,MAAM,CAAC,IAAI,CAAC;EAE7B,MAAMW,YAAY,GAAIC,CAAC,IAAK;IAC1BL,QAAQ,CAACK,CAAC,CAACC,MAAM,CAACJ,KAAK,CAAC;EAC1B,CAAC;EAED,MAAMK,YAAY,GAAIF,CAAC,IAAK;IAC1BA,CAAC,CAACG,cAAc,EAAE;IAElBZ,KAAK,CAACa,QAAQ,CAAC;MACbC,EAAE,EAAEC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAG,KAAK,CAAC;MACrCC,IAAI,EAAEf;IACR,CAAC,CAAC;IACFC,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,oBACE;IAAK,SAAS,EAAEN,OAAO,CAACqB,IAAK;IAAA,wBAC3B;MAAQ,OAAO,EAAE,MAAMjB,YAAY,CAAC,CAACD,SAAS,CAAE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAa,EAC5DA,SAAS,KAAK,IAAI,gBACjB;MAAA,uBACE;QAAM,QAAQ,EAAEU,YAAa;QAAC,SAAS,EAAEb,OAAO,CAACsB,QAAS;QAAA,UACvDpB,KAAK,CAACK,IAAI,gBACT;UAAA,wBACE;YACE,KAAK,EAAEF,KAAM;YACb,QAAQ,EAAEK,YAAa;YACvB,IAAI,EAAC,MAAM;YACX,GAAG,EAAED,QAAS;YACd,SAAS,EAAET,OAAO,CAACuB;UAAU;YAAA;YAAA;YAAA;UAAA,QAC7B,eACF;YAAQ,OAAO,EAAEV,YAAa;YAAC,SAAS,EAAEb,OAAO,CAACwB,SAAU;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAEnD;QAAA;UAAA;UAAA;UAAA;QAAA,QACL,gBAEN;UAAA,wBACE;YACE,KAAK,EAAEnB,KAAM;YACb,QAAQ,EAAEK,YAAa;YACvB,IAAI,EAAC,MAAM;YACX,SAAS,EAAEV,OAAO,CAACuB,SAAU;YAC7B,GAAG,EAAEd;UAAS;YAAA;YAAA;YAAA;UAAA,QACd,eACF;YAAQ,OAAO,EAAEI,YAAa;YAAC,SAAS,EAAEb,OAAO,CAACwB,SAAU;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAEnD;QAAA;UAAA;UAAA;UAAA;QAAA;MAEZ;QAAA;QAAA;QAAA;MAAA;IACI,iBACN,GAEH,EACD;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GA5DQvB,QAAQ;AAAA,KAARA,QAAQ;AA8DjB,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}