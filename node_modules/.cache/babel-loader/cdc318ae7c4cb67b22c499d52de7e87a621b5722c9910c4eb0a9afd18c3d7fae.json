{"ast":null,"code":"var _jsxFileName = \"/Users/soojinpark/Desktop/todo_list/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\nimport classes from \"./Login.module.css\";\nimport logo from \"../assets/logo.png\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser, faLock } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const onSubmit = data => console.log(data);\n  const userRef = useRef();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n  const userIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    size: \"lg\",\n    icon: faUser\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 20\n  }, this);\n  const lockIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n    size: \"lg\",\n    icon: faLock\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 20\n  }, this);\n\n  // const handleSubmit = async (e) => {\n  //   e.preventDefault();\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.body,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.mainBox,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.signinBox,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.formContainer,\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit(onSubmit),\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"email\",\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.inputForm,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: classes.inputIcon,\n                  children: userIcon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"email\",\n                  placeholder: \"user@rapptrlabs.com\",\n                  id: \"email\",\n                  ref: userRef,\n                  autoComplete: \"off\",\n                  className: errors.email && \"invalid\",\n                  onChange: e => setEmail(e.target.value),\n                  ...register(\"email\", {\n                    required: \"Value is required and can't be empty\",\n                    maxLength: {\n                      value: 50,\n                      message: \"Not a valid email\"\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 17\n              }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: classes.errMsg,\n                children: errors.email.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"password\",\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.inputForm,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: classes.inputIcon,\n                  children: lockIcon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"password\",\n                  placeholder: \"Must be at least 4 characters\",\n                  id: \"password\",\n                  ref: userRef,\n                  autoComplete: \"off\",\n                  className: errors.password && \"invalid\",\n                  onChange: e => setPassword(e.target.value),\n                  ...register(\"password\", {\n                    required: \"Value is required and can't be empty\",\n                    minLength: {\n                      value: 4,\n                      message: \"Password must be 4-16 characters long\"\n                    },\n                    maxLength: {\n                      value: 16,\n                      message: \"Password must be 4-16 characters long\"\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: classes.errMsg,\n                children: errors.password.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"invalid\",\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.leftbox,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: classes.title,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.firstSpan,\n              children: \"Rapptr\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \" \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.secondSpan,\n              children: \"Labs\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"From Idea to Adoption.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: classes.logo,\n            src: logo,\n            alt: \"logo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"dOIw1IkXgaIuD0g4asFscHH1gfQ=\", false, function () {\n  return [useForm, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useRef","useState","useNavigate","useForm","classes","logo","FontAwesomeIcon","faUser","faLock","Login","register","handleSubmit","formState","errors","onSubmit","data","console","log","userRef","navigate","email","setEmail","password","setPassword","success","setSuccess","userIcon","lockIcon","body","container","mainBox","signinBox","formContainer","inputForm","inputIcon","e","target","value","required","maxLength","message","errMsg","minLength","leftbox","title","firstSpan","secondSpan"],"sources":["/Users/soojinpark/Desktop/todo_list/src/components/Login.js"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useForm } from \"react-hook-form\";\n\nimport classes from \"./Login.module.css\";\nimport logo from \"../assets/logo.png\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser, faLock } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Login = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  const onSubmit = (data) => console.log(data);\n\n  const userRef = useRef();\n  const navigate = useNavigate();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n\n  const userIcon = <FontAwesomeIcon size=\"lg\" icon={faUser} />;\n  const lockIcon = <FontAwesomeIcon size=\"lg\" icon={faLock} />;\n\n  // const handleSubmit = async (e) => {\n  //   e.preventDefault();\n  // };\n\n  return (\n    <div className={classes.body}>\n      <div className={classes.container}>\n        <div className={classes.mainBox}>\n          <div className={classes.signinBox}>\n            <h1>sign in</h1>\n            <div className={classes.formContainer}>\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <label htmlFor=\"email\">Email</label>\n                <div className={classes.inputForm}>\n                  <span className={classes.inputIcon}>{userIcon}</span>\n                  <input\n                    type=\"email\"\n                    placeholder=\"user@rapptrlabs.com\"\n                    id=\"email\"\n                    ref={userRef}\n                    autoComplete=\"off\"\n                    className={errors.email && \"invalid\"}\n                    onChange={(e) => setEmail(e.target.value)}\n                    {...register(\"email\", {\n                      required: \"Value is required and can't be empty\",\n                      maxLength: {\n                        value: 50,\n                        message: \"Not a valid email\",\n                      },\n                    })}\n                  />\n                </div>\n                {errors.email && (\n                  <p className={classes.errMsg}>{errors.email.message}</p>\n                )}\n\n                <label htmlFor=\"password\">Password</label>\n                <div className={classes.inputForm}>\n                  <span className={classes.inputIcon}>{lockIcon}</span>\n                  <input\n                    type=\"password\"\n                    placeholder=\"Must be at least 4 characters\"\n                    id=\"password\"\n                    ref={userRef}\n                    autoComplete=\"off\"\n                    className={errors.password && \"invalid\"}\n                    onChange={(e) => setPassword(e.target.value)}\n                    {...register(\"password\", {\n                      required: \"Value is required and can't be empty\",\n                      minLength: {\n                        value: 4,\n                        message: \"Password must be 4-16 characters long\",\n                      },\n                      maxLength: {\n                        value: 16,\n                        message: \"Password must be 4-16 characters long\",\n                      },\n                    })}\n                  />\n                </div>\n                {errors.password && (\n                  <p className={classes.errMsg}>{errors.password.message}</p>\n                )}\n                <button className=\"invalid\">Login</button>\n              </form>\n            </div>\n          </div>\n\n          <div className={classes.leftbox}>\n            <h2 className={classes.title}>\n              <span className={classes.firstSpan}>Rapptr</span>\n              <span> </span>\n              <span className={classes.secondSpan}>Labs</span>\n            </h2>\n            <p>From Idea to Adoption.</p>\n            <img className={classes.logo} src={logo} alt=\"logo\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}